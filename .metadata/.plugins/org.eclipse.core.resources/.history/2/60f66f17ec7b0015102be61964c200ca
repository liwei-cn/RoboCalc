/*
 * myWorld.cpp
 *
 *  Created on: Oct 26, 2015
 *      Author: liwei
 */

#include "myWorld.h"
using namespace Enki;

myWorld::myWorld(double width, double height, const Color& wallsColor, unsigned maxSteps) :
	Enki::World(width, height, wallsColor), maxSteps(maxSteps)
{
	c_step = 0;
	for (int i = 0; i < (NumberOfAgent); i++){
		agents.push_back(new Agent);  //sensor ability: none; noise: 0.05
		addObject(agents[i]);
	}
	InitializeConfiguration();
}

void myWorld::InitializeConfiguration()
{

	for(int i = 0; i < (NumberOfAgent); i++)
	{
		double xi;
		double yi;
		bool Overlap;

		do
		{
//			const double LengthOfSides = sqrt(AreaPerRobot*(NumberOfAgent+NumberOfModels));
			const double LengthOfSides = ArenaWidth;
			xi = LengthOfSides*gsl_rng_uniform(rng);
		    yi = LengthOfSides*gsl_rng_uniform(rng);
			Overlap = false;

			for (int j = 0; j < i; j ++ )
			{
				double xj = agents[j]->pos.x;
				double yj = agents[j]->pos.y;

				double dij = sqrt(pow(xi - xj, 2.0) + pow(yi - yj, 2.0));

				if (dij < (2.0 * EPuckRadius))
				{
					Overlap = true;
					break;
				}
			}

		} while(Overlap == true);

		agents[i]->pos.x = xi;
		agents[i]->pos.y = yi;
		agents[i]->angle = 2.0*M_PI*(gsl_rng_uniform(rng) - 0.5);
	}

}
